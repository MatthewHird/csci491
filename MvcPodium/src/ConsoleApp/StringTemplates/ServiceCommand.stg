import "CSharpCommon.stg"


ServiceFile(usingDirectives, serviceNamespace, serviceDeclaration) ::= <<
<UsingDirectives(usingDirectives)>
<ServiceNamespaceDeclaration(serviceNamespace, serviceDeclaration)><\n>
>>


ServiceNamespaceDeclaration(serviceNamespace, serviceDeclaration) ::= <<
<NamespaceDeclaration(serviceNamespace)>
{
    <if(serviceDeclaration.IsInterface)><
InterfaceDeclaration(
    serviceDeclaration.Attributes,
    serviceDeclaration.Modifiers,
    serviceDeclaration.Identifier,
    serviceDeclaration.TypeParameters,
    serviceDeclaration.Base,
    serviceDeclaration.Body)
><\n><else><
ClassDeclaration(
    serviceDeclaration.Attributes,
    serviceDeclaration.Modifiers,
    serviceDeclaration.Identifier,
    serviceDeclaration.TypeParameters,
    serviceDeclaration.Base,
    serviceDeclaration.Body)
><\n><endif>}
>>


ServiceStartupRegistrationCall(serviceLifespan, hasTypeParameters, serviceName) ::= <<
.Add<serviceLifespan><\\>
<if(hasTypeParameters)>(typeof(I<serviceName>Service\<>), typeof(<serviceName>Service\<>))<\\>
<else>\<I<serviceName>Service, <serviceName>Service>()<endif>
>>

